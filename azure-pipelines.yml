trigger:
  branches:
    include:
      - develop
      - feature/**
      - release/**
      - master
      - hotfix/**

pr:
  branches:
    include:
      - develop
      - master

pool:
  name: 'Default' # Use self-host agent pool named 'Default'

variables:
  nodeVersion: '22.x'

resources:
  - repo: self

stages:
  - stage: BuildStage
    displayName: Build 

    jobs:
      - job: BuildJob
        displayName: Build 

        steps:
          - script: pnpm i 
            displayName: 'Install dependencies'

          - script: pnpm run lint 
            displayName: 'Lint'

          - script: pnpm run build 
            displayName: 'Build'

          - script: pnpm run test 
            displayName: 'Test'

      - job: PublishJob
        displayName: PublishJob
        dependsOn: BuildJob
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))

        steps:
          - task: PowerShell@2
            displayName: Generate build version
            inputs:
              targetType: inline
              script: |
                Write-Host "Generating build version..."

                $buildVersion = (Get-Date).ToString("yy.MMdd") + ".$(Build.BuildId)"
                Write-Host "##vso[task.setvariable variable=BuildVersion]$buildVersion"

                Write-Host "Generated Build Version: $buildVersion"     
          
          - task: PowerShell@2
            displayName: Update package.json version 
            inputs:
              targetType: inline
              script: |
                Write-Host "Updating package.json version..."

                $packageJsonPath = "$(System.DefaultWorkingDirectory)/package.json"
                $packageJson = Get-Content $packageJsonPath -Raw | ConvertFrom-Json
                $packageJson.version = "$(BuildVersion)"
                $packageJson | ConvertTo-Json -Depth 32 | Set-Content $packageJsonPath

                Write-Host "Updated package.json version to $(BuildVersion)"

          - script: pnpm i
            displayName: Install dependencies

          - script: pnpm run build
            displayName: 'Build'

          - task: PublishPipelineArtifact@1
            displayName: Publish pipeline artifact
            inputs:
              targetPath: $(Build.SourcesDirectory)/artifacts
              artifact: 'RichillCapital.SharedKernel-$(BuildVersion)'
              publishLocation: 'pipeline'

  - stage: ReleaseStage
    displayName: Build release artifacts 
    dependsOn: BuildStage
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')

    jobs:
      - job: ReleaseJob
        displayName: Build release artifacts
        steps:
          - task: PowerShell@2
            displayName: Generate release version
            inputs:
              targetType: inline
              script: |
                Write-Host "Generating release version from branch: $(Build.SourceBranch)"

                $branchName = "$(Build.SourceBranchName)"
                Write-Host "##vso[task.setvariable variable=ReleaseVersion]$branchName"

                Write-Host "Generated Release Version: $branchName"

          - task: PowerShell@2
            displayName: Update package.json version
            inputs:
              targetType: inline
              script: |
                Write-Host "Updating package.json version..."

                $packageJsonPath = "$(System.DefaultWorkingDirectory)/package.json"
                $packageJson = Get-Content $packageJsonPath -Raw | ConvertFrom-Json
                $packageJson.version = "$(ReleaseVersion)"
                $packageJson | ConvertTo-Json -Depth 32 | Set-Content $packageJsonPath

                Write-Host "Updated package.json version to $(ReleaseVersion)"

          - script: | 
              pnpm i
              pnpm run build 
            displayName: Generate release build 

             